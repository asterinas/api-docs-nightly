searchState.loadedDescShard("tdx_guest", 0, "The TDCALL instruction causes a VM exit to the Intel TDX …\nThe TDVMCALL helps invoke services from the host VMM. From …\nGuest TD runs in off-TD debug mode. Its VCPU state and …\nThe <code>GlaListEntry</code> species a range of consecutive guest …\nThe <code>GlaListInfo</code> is used as a GPR input and output operand …\nGPA Attributes (Single VM) Definition.\nGPA Attributes (all VMs) Definition.\nGuestTdAttributes is defined as a 64b field that specifies …\nInvalidate all TLB entries associated with the L2 VM being …\nInvalidate all TLB entries and extended paging-structure …\nInvalidate TLB entries associated with the L2 VM being …\nControls how enter_l2_vcpu flushes the TLB context and …\nTD is allowed to use Key Locker. Must be 0.\nL2EnterGuestState is used as input and output of …\nTD is migratable (using a Migration TD).\nTD is allowed to use Perfmon and PERF_METRICS capabilities.\nTD is allowed to use Supervisor Protection Keys.\nPaging-Write Access.\nRead.\nREPORTTYPE indicates the reported Trusted Execution …\nSupervisor Shadow Stack.\nSuppress #VE.\nTDINFO_STRUCT is defined as the TDX-specific TEE_INFO part …\nTDCALL Instruction Leaf Numbers Definition.\nThe provided FIELD_ID is incorrect.\nField code is for an unreadable field.\nField code and write mask are for a read-only field.\nThe provided field value is not valid.\nThere is no valid #VE information.\nThe TD’s OP_STATE is incorrect for the required …\nOperand address is out of range (e.g., not in a TDMR).\nThe operand is busy (e.g., it is locked in Exclusive mode).\nOperand is invalid.\nPage has already been accepted.\nPhysical page metadata (in PAMT) are incorrect for the …\nRequested page size does not match the current GPA mapping …\nService TD hash of TDINFO_STRUCT does not match the …\nService TD is not bound.\nService TD UUID does not match the currently bound UUID.\nTarget TD UUID does not match the requested TD_UUID.\nTarget TD UUID does not match the requested TD_UUID, but …\nTD is in a FATAL error state.\nTD keys have not been configured on the hardware.\nTDCS pages have not been allocated.\nIndicates that the other bits are valid. If its value is …\nVerify Guest Paging.\nWrite.\nExecute (Supervisor).\nExecute (User).\nAccept a pending private page and initialize it to all-0 …\nReturns the set containing all flags.\nReturns the set containing all flags.\nTD’s ATTRIBUTES.\nThe TD’s ATTRIBUTES (provided as input to TDH.MNG.INIT)\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\nEnter L2 VCPU operation.\nThe 32-bit value that would have been saved into the VMCS …\nThe 32-bit value that would have been saved into the VMCS …\nthe 64-bit value that would have been saved into the VMCS …\nExtend a TDCS.RTMR measurement register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nTDG.MR.REPORT creates a TDREPORT_STRUCT structure that …\nGet guest TD execution environment information.\nGet Virtualization Exception Information for the recent …\nThe effective GPA width (in bits) for this TD (do not …\nthe 64-bit value that would have been saved into the VMCS …\nthe 64-bit value that would have been saved into the VMCS …\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInvalidate cached EPT translations for selected L2 VMs.\nInvalidate Guest Linear Address (GLA) mappings in the …\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nThe MAC over the REPORTMACSTRUCT with model-specific MAC.\nSoftware-defined ID for non-owner-defined configuration of …\nSoftware-defined ID for the guest TD’s owner.\nSoftware-defined ID for owner-defined configuration of the …\nMeasurement of the initial contents of the TD.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRead the GPA mapping and attributes of a TD private page.\nAs a service TD, read a metadata field (control structure …\nRead a TD-scope metadata field (control structure field) …\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nA set of data used for communication between the caller …\nREPORTMACSTRUCT for the TDG.MR.REPORT.\nType Header Structure.\nArray of NUM_RTMRS (4) run-time extendable measurement …\nIf is one or more bound or pre-bound service TDs, …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nTDG.VP.CPUIDVE.SET controls unconditional #VE on CPUID …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nTYPE-specific subtype.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nIndicates that the TDG.SYS.RD/RDM/RDCALL function are …\nTD’s attestable properties.\nSHA384 of TEE_INFO: a TEE-specific info structure …\nAdditional attestable elements in the TD’s TCB are not …\nSHA384 of TEE_TCB_INFO for TEEs implemented using Intel …\nTrusted Execution Environment (TEE) Type. 0x00: SGX, 0x81: …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nVerify a cryptographic REPORTMACSTRUCT that describes the …\nTYPE-specific version.\nWrite the attributes of a private page. Create or remove …\nAs a service TD, write a metadata field (control structure …\nWrite a TD-scope metadata field (control structure field) …\nTD’s XFAM.\nTDVMCALL Instruction Leaf Numbers Definition.\nOperand (address) aligned error.\nGPA already mapped.\nInvalid operand to TDG.VP.VMCALL sub-function.\nTDCALL[TDG.VP.VMCALL] sub-function invocation must be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGetQuote TDG.VP.VMCALL is a doorbell-like interface used …\nIn Service TD scenario, there is a need to define …\nGetTdVmCallInfo TDG.VP.VMCALL is used to help request the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMapGPA TDG.VP.VMCALL is used to help request the host VMM …\nUsed to help perform WBINVD or WBNOINVD operation.\nSafety\nSafety\nThe guest TD may request that the host VMM specify which …\nSafety\nSafety")