(function() {
    var type_impls = Object.fromEntries([["ostd",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pod-for-usize\" class=\"impl\"><a class=\"src rightside\" href=\"src/ostd_pod/lib.rs.html#66\">Source</a><a href=\"#impl-Pod-for-usize\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ostd/trait.Pod.html\" title=\"trait ostd::Pod\">Pod</a> for usize</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ostd_pod/lib.rs.html#23\">Source</a><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ostd/trait.Pod.html#method.new_zeroed\" class=\"fn\">new_zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Creates a new instance of Pod type that is filled with zeroes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_uninit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ostd_pod/lib.rs.html#29\">Source</a><a href=\"#method.new_uninit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ostd/trait.Pod.html#method.new_uninit\" class=\"fn\">new_uninit</a>() -&gt; Self</h4></section></summary><div class='docblock'>Creates a new instance of Pod type with uninitialized content.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ostd_pod/lib.rs.html#38\">Source</a><a href=\"#method.from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ostd/trait.Pod.html#method.from_bytes\" class=\"fn\">from_bytes</a>(bytes: &amp;[u8]) -&gt; Self</h4></section></summary><div class='docblock'>Creates a new instance from the given bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ostd_pod/lib.rs.html#46\">Source</a><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ostd/trait.Pod.html#method.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[u8]</h4></section></summary><div class='docblock'>As a slice of bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ostd_pod/lib.rs.html#53\">Source</a><a href=\"#method.as_bytes_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ostd/trait.Pod.html#method.as_bytes_mut\" class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [u8]</h4></section></summary><div class='docblock'>As a mutable slice of bytes.</div></details></div></details>","Pod","ostd::mm::Vaddr","ostd::mm::Paddr","ostd::mm::Daddr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RangeExt%3Cusize%3E-for-R\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/range.rs.html#54-55\">Source</a><a href=\"#impl-RangeExt%3Cusize%3E-for-R\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R&gt; <a class=\"trait\" href=\"wyz/range/trait.RangeExt.html\" title=\"trait wyz::range::RangeExt\">RangeExt</a>&lt;usize&gt; for R<div class=\"where\">where\n    R: RangeBounds&lt;usize&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.normalize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/range.rs.html#57-61\">Source</a><a href=\"#method.normalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wyz/range/trait.RangeExt.html#tymethod.normalize\" class=\"fn\">normalize</a>(\n    self,\n    start: impl Into&lt;Option&lt;usize&gt;&gt;,\n    end: impl Into&lt;Option&lt;usize&gt;&gt;,\n) -&gt; Range&lt;usize&gt;</h4></section></summary><div class='docblock'>Normalizes a range-like type to a canonical half-open <code>Range</code>. <a href=\"wyz/range/trait.RangeExt.html#tymethod.normalize\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersection\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/range.rs.html#80-81\">Source</a><a href=\"#method.intersection\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wyz/range/trait.RangeExt.html#tymethod.intersection\" class=\"fn\">intersection</a>&lt;R2&gt;(self, other: R2) -&gt; Option&lt;Range&lt;usize&gt;&gt;<div class=\"where\">where\n    R2: <a class=\"trait\" href=\"wyz/range/trait.RangeExt.html\" title=\"trait wyz::range::RangeExt\">RangeExt</a>&lt;usize&gt;,</div></h4></section></summary><div class='docblock'>Finds the intersection between two range-likes. The produced <code>Range</code>\nspans only the elements common to both. <a href=\"wyz/range/trait.RangeExt.html#tymethod.intersection\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.union\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/range.rs.html#100-101\">Source</a><a href=\"#method.union\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wyz/range/trait.RangeExt.html#tymethod.union\" class=\"fn\">union</a>&lt;R2&gt;(self, other: R2) -&gt; Option&lt;Range&lt;usize&gt;&gt;<div class=\"where\">where\n    R2: <a class=\"trait\" href=\"wyz/range/trait.RangeExt.html\" title=\"trait wyz::range::RangeExt\">RangeExt</a>&lt;usize&gt;,</div></h4></section></summary><div class='docblock'>Finds the union between two range-likes. The produced <code>Range</code> spans all\nelements present in at least one of them. <a href=\"wyz/range/trait.RangeExt.html#tymethod.union\">Read more</a></div></details></div></details>","RangeExt<usize>","ostd::mm::Vaddr","ostd::mm::Paddr","ostd::mm::Daddr"],["<section id=\"impl-PodOnce-for-usize\" class=\"impl\"><a class=\"src rightside\" href=\"src/ostd/mm/io.rs.html#1017\">Source</a><a href=\"#impl-PodOnce-for-usize\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ostd/mm/io/trait.PodOnce.html\" title=\"trait ostd::mm::io::PodOnce\">PodOnce</a> for usize</h3></section>","PodOnce","ostd::mm::Vaddr","ostd::mm::Paddr","ostd::mm::Daddr"]]],["tdx_guest",[]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[6358,17]}