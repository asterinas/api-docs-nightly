(function() {
    var type_impls = Object.fromEntries([["x86",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-%5BT;+N%5D\" class=\"impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#impl-Debug-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: usize&gt; Debug for [T; N]<div class=\"where\">where\n    T: Debug,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result&lt;(), Error&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a>Read more</a></div></details></div></details>","Debug","x86::bits32::paging::PD","x86::bits32::paging::PT","x86::bits64::paging::PML4","x86::bits64::paging::PML5","x86::bits64::paging::PDPT","x86::bits64::paging::PD","x86::bits64::paging::PT"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.50.0\">1.50.0</span><a href=\"#impl-Index%3CI%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I, const N: usize&gt; Index&lt;I&gt; for [T; N]<div class=\"where\">where\n    [T]: Index&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;[T] as Index&lt;I&gt;&gt;::Output</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;&lt;[T; N] as Index&lt;I&gt;&gt;::Output</h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a>Read more</a></div></details></div></details>","Index<I>","x86::bits32::paging::PD","x86::bits32::paging::PT","x86::bits64::paging::PML4","x86::bits64::paging::PML5","x86::bits64::paging::PDPT","x86::bits64::paging::PD","x86::bits64::paging::PT"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-%5BT;+N%5D\" class=\"impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.50.0\">1.50.0</span><a href=\"#impl-IndexMut%3CI%3E-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I, const N: usize&gt; IndexMut&lt;I&gt; for [T; N]<div class=\"where\">where\n    [T]: IndexMut&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut &lt;[T; N] as Index&lt;I&gt;&gt;::Output</h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a>Read more</a></div></details></div></details>","IndexMut<I>","x86::bits32::paging::PD","x86::bits32::paging::PT","x86::bits64::paging::PML4","x86::bits64::paging::PML5","x86::bits64::paging::PDPT","x86::bits64::paging::PD","x86::bits64::paging::PT"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[3737]}